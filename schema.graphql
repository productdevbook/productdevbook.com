type Query {
  repository(filter: repository_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [repository]
  repository_by_id(id: ID!): repository
  repository_aggregated(groupBy: [String], filter: repository_filter, search: String, sort: [String]): [repository_aggregated]
  framework(filter: framework_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [framework]
  framework_by_id(id: ID!): framework
  framework_aggregated(groupBy: [String], filter: framework_filter, search: String, sort: [String]): [framework_aggregated]
  version(filter: version_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [version]
  version_by_id(id: ID!): version
  version_aggregated(groupBy: [String], filter: version_filter, search: String, sort: [String]): [version_aggregated]
  version_framework(filter: version_framework_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [version_framework]
  version_framework_by_id(id: ID!): version_framework
  version_framework_aggregated(groupBy: [String], filter: version_framework_filter, search: String, sort: [String]): [version_framework_aggregated]
}

type repository {
  id: ID
  status: String!
  sort: Int
  user_created: String
  date_created: Date
  date_created_func: datetime_functions
  user_updated: String
  date_updated: Date
  date_updated_func: datetime_functions
  title: String
  description: String
}

"""ISO8601 Date values"""
scalar Date

type datetime_functions {
  year: Int
  month: Int
  week: Int
  day: Int
  weekday: Int
  hour: Int
  minute: Int
  second: Int
}

input repository_filter {
  id: string_filter_operators
  status: string_filter_operators
  sort: number_filter_operators
  user_created: string_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_updated: string_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  title: string_filter_operators
  description: string_filter_operators
  _and: [repository_filter]
  _or: [repository_filter]
}

input string_filter_operators {
  _eq: String
  _neq: String
  _contains: String
  _ncontains: String
  _starts_with: String
  _nstarts_with: String
  _ends_with: String
  _nends_with: String
  _in: [String]
  _nin: [String]
  _null: Boolean
  _nnull: Boolean
  _empty: Boolean
  _nempty: Boolean
}

input number_filter_operators {
  _eq: Float
  _neq: Float
  _in: [Float]
  _nin: [Float]
  _gt: Float
  _gte: Float
  _lt: Float
  _lte: Float
  _null: Boolean
  _nnull: Boolean
}

input date_filter_operators {
  _eq: String
  _neq: String
  _gt: String
  _gte: String
  _lt: String
  _lte: String
  _null: Boolean
  _nnull: Boolean
}

input datetime_function_filter_operators {
  year: number_filter_operators
  month: number_filter_operators
  week: number_filter_operators
  day: number_filter_operators
  weekday: number_filter_operators
  hour: number_filter_operators
  minute: number_filter_operators
  second: number_filter_operators
}

type repository_aggregated {
  group: JSON
  avg: repository_aggregated_fields
  sum: repository_aggregated_fields
  count: repository_aggregated_fields
  countDistinct: repository_aggregated_fields
  avgDistinct: repository_aggregated_fields
  sumDistinct: repository_aggregated_fields
  min: repository_aggregated_fields
  max: repository_aggregated_fields
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type repository_aggregated_fields {
  sort: Float
}

type framework {
  id: ID
  status: String!
  sort: Int
  user_created: String
  date_created: Date
  date_created_func: datetime_functions
  user_updated: String
  date_updated: Date
  date_updated_func: datetime_functions
  title: String
  logo: String
  slug: String
  versions(filter: version_framework_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [version_framework]
}

type version_framework {
  id: ID
  version_id(filter: version_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): version
  framework_id(filter: framework_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): framework
}

type version {
  id: ID
  status: String!
  sort: Int
  date_created: Date
  date_created_func: datetime_functions
  title: String
  frameworks(filter: version_framework_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [version_framework]
}

input version_framework_filter {
  id: number_filter_operators
  version_id: version_filter
  framework_id: framework_filter
  _and: [version_framework_filter]
  _or: [version_framework_filter]
}

input version_filter {
  id: string_filter_operators
  status: string_filter_operators
  sort: number_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  title: string_filter_operators
  frameworks: version_framework_filter
  _and: [version_filter]
  _or: [version_filter]
}

input framework_filter {
  id: string_filter_operators
  status: string_filter_operators
  sort: number_filter_operators
  user_created: string_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_updated: string_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  title: string_filter_operators
  logo: string_filter_operators
  slug: string_filter_operators
  versions: version_framework_filter
  _and: [framework_filter]
  _or: [framework_filter]
}

type framework_aggregated {
  group: JSON
  avg: framework_aggregated_fields
  sum: framework_aggregated_fields
  count: framework_aggregated_fields
  countDistinct: framework_aggregated_fields
  avgDistinct: framework_aggregated_fields
  sumDistinct: framework_aggregated_fields
  min: framework_aggregated_fields
  max: framework_aggregated_fields
}

type framework_aggregated_fields {
  sort: Float
}

type version_aggregated {
  group: JSON
  avg: version_aggregated_fields
  sum: version_aggregated_fields
  count: version_aggregated_fields
  countDistinct: version_aggregated_fields
  avgDistinct: version_aggregated_fields
  sumDistinct: version_aggregated_fields
  min: version_aggregated_fields
  max: version_aggregated_fields
}

type version_aggregated_fields {
  sort: Float
}

type version_framework_aggregated {
  group: JSON
  avg: version_framework_aggregated_fields
  sum: version_framework_aggregated_fields
  count: version_framework_aggregated_fields
  countDistinct: version_framework_aggregated_fields
  avgDistinct: version_framework_aggregated_fields
  sumDistinct: version_framework_aggregated_fields
  min: version_framework_aggregated_fields
  max: version_framework_aggregated_fields
}

type version_framework_aggregated_fields {
  id: Float
}
